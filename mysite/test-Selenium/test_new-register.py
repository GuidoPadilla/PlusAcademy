# Generated by Selenium IDE
# Test that is focused on the entry feature of a new payment record

################################
# BDD tests                    #
# Related to pagos.feature     #
################################

#################################################################
# Scenario: Ingreso de pago de una cuota mensual de un estudiante
#################################################################

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestNewregister():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_newregister(self):
    # Test name: new_register
    # Step # | name | target | value
    # 1 | open | /pagos/control/ | 
    self.driver.get("https://plus-academy.herokuapp.com/pagos/control/")
    # 2 | setWindowSize | 965x715 | 
    self.driver.set_window_size(965, 715)
    # 3 | click | linkText=Control de Pagos | 

    ######################################################
    #Given: Los campos requeridos para un registro de pago
    ######################################################


    self.driver.find_element(By.LINK_TEXT, "Control de Pagos").click()
    # 4 | click | linkText=Ingreso de Pagos | 
    self.driver.find_element(By.LINK_TEXT, "Ingreso de Pagos").click()
    # 5 | click | id=id_codigo_curso | 
    self.driver.find_element(By.ID, "id_codigo_curso").click()
    # 6 | select | id=id_codigo_curso | label=CC2021
    dropdown = self.driver.find_element(By.ID, "id_codigo_curso")
    dropdown.find_element(By.XPATH, "//option[. = 'CC2021']").click()
    # 7 | click | css=#id_codigo_curso > option:nth-child(2) | 
    self.driver.find_element(By.CSS_SELECTOR, "#id_codigo_curso > option:nth-child(2)").click()
    # 8 | click | id=id_user | 
    self.driver.find_element(By.ID, "id_user").click()
    # 9 | select | id=id_user | label=luis
    dropdown = self.driver.find_element(By.ID, "id_user")
    dropdown.find_element(By.XPATH, "//option[. = 'luis']").click()
    # 10 | click | css=option:nth-child(6) | 
    self.driver.find_element(By.CSS_SELECTOR, "option:nth-child(6)").click()
    # 11 | click | id=id_tipo_pago | 
    self.driver.find_element(By.ID, "id_tipo_pago").click()
    # 12 | select | id=id_tipo_pago | label=Inscripcion
    dropdown = self.driver.find_element(By.ID, "id_tipo_pago")
    dropdown.find_element(By.XPATH, "//option[. = 'Inscripcion']").click()
    # 13 | click | css=#id_tipo_pago > option:nth-child(2) | 
    self.driver.find_element(By.CSS_SELECTOR, "#id_tipo_pago > option:nth-child(2)").click()
    # 14 | mouseDownAt | id=id_tipo_pago | -374.3999938964844,-311.20001220703125
    element = self.driver.find_element(By.ID, "id_tipo_pago")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    # 15 | mouseMoveAt | id=id_tipo_pago | -374.3999938964844,-311.20001220703125
    element = self.driver.find_element(By.ID, "id_tipo_pago")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 16 | mouseUpAt | id=id_tipo_pago | -374.3999938964844,-311.20001220703125
    element = self.driver.find_element(By.ID, "id_tipo_pago")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    # 17 | click | id=id_tipo_pago | 
    self.driver.find_element(By.ID, "id_tipo_pago").click()
    # 18 | select | id=id_tipo_pago | label=Cuota
    dropdown = self.driver.find_element(By.ID, "id_tipo_pago")
    dropdown.find_element(By.XPATH, "//option[. = 'Cuota']").click()
    # 19 | click | css=#id_tipo_pago > option:nth-child(3) | 
    self.driver.find_element(By.CSS_SELECTOR, "#id_tipo_pago > option:nth-child(3)").click()
    # 20 | mouseDownAt | id=id_forma_pago | -374.3999938964844,-373.20001220703125
    element = self.driver.find_element(By.ID, "id_forma_pago")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    # 21 | mouseMoveAt | id=id_forma_pago | -374.3999938964844,-373.20001220703125
    element = self.driver.find_element(By.ID, "id_forma_pago")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 22 | mouseUpAt | id=id_forma_pago | -374.3999938964844,-373.20001220703125
    element = self.driver.find_element(By.ID, "id_forma_pago")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    # 23 | click | id=id_forma_pago | 
    self.driver.find_element(By.ID, "id_forma_pago").click()
    # 24 | select | id=id_forma_pago | label=Efectivo
    dropdown = self.driver.find_element(By.ID, "id_forma_pago")
    dropdown.find_element(By.XPATH, "//option[. = 'Efectivo']").click()
    # 25 | click | css=#id_forma_pago > option:nth-child(2) | 
    self.driver.find_element(By.CSS_SELECTOR, "#id_forma_pago > option:nth-child(2)").click()
    # 26 | mouseDownAt | id=id_moneda | -374.3999938964844,-435.20001220703125
    element = self.driver.find_element(By.ID, "id_moneda")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    # 27 | mouseMoveAt | id=id_moneda | -374.3999938964844,-435.20001220703125
    element = self.driver.find_element(By.ID, "id_moneda")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 28 | mouseUpAt | id=id_moneda | -374.3999938964844,-435.20001220703125
    element = self.driver.find_element(By.ID, "id_moneda")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    # 29 | click | id=id_moneda | 
    self.driver.find_element(By.ID, "id_moneda").click()
    # 30 | select | id=id_moneda | label=Quetzal
    dropdown = self.driver.find_element(By.ID, "id_moneda")
    dropdown.find_element(By.XPATH, "//option[. = 'Quetzal']").click()
    # 31 | click | css=#id_moneda > option:nth-child(3) | 
    self.driver.find_element(By.CSS_SELECTOR, "#id_moneda > option:nth-child(3)").click()
    # 32 | click | id=id_cantidad | 
    self.driver.find_element(By.ID, "id_cantidad").click()
    # 33 | type | id=id_cantidad | 200
    self.driver.find_element(By.ID, "id_cantidad").send_keys("200")
    # 34 | click | css=.btn | 

    ############################################
    #When: El usuario solicita ingresar el pago
    ############################################

    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    # 35 | click | linkText=Control de Pagos | 
    
    ####################################################
    #Then: Se registra el nuevo pago en la base de datos
    ####################################################
    
    self.driver.find_element(By.LINK_TEXT, "Control de Pagos").click()
  
